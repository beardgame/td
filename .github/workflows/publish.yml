name: Publish

on:
  push:
    tags:
      - v*

jobs:

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build -c Release --no-restore
      - name: Test
        run: dotnet test -c Release --no-build

  publish:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        runtime: [win-x64, osx-x64, linux-x64]
        binary: [Bearded.TD, Bearded.TD.MasterServer]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Install dependencies
        run: dotnet restore -r ${{matrix.runtime}}
      - name: Build
        run: dotnet build src/${{matrix.binary}} -c Release -r ${{matrix.runtime}} --no-restore --self-contained -p:PublishSingleFile=true

      # The version number can be extracted from the currently checked out tag,
      # which has the format 'refs/tags/v*'.
      - name: Extract version number
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Create self-contained package
        run: dotnet publish src/${{matrix.binary}} -c Release --no-build -r ${{matrix.runtime}} --self-contained -o publish/${{matrix.runtime}} -p:PublishSingleFile=true

      - name: Create zip archive
        uses: thedoctor0/zip-release@0.7.6
        with:
          type: zip
          filename: ${{matrix.binary}}-${{ env.RELEASE_VERSION }}-${{matrix.runtime}}.zip
          path: ${{matrix.runtime}}
          directory: publish
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: "publish/*.zip"
          if-no-files-found: error

  release:
    needs: publish
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: binaries
          path: publish/

      # The version number can be extracted from the currently checked out tag,
      # which has the format 'refs/tags/v*'.
      - name: Extract version number
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          name: ${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: ${{ contains(env.RELEASE_VERSION, '-') }}
          token: ${{ secrets.GITHUB_TOKEN }}
          files: "publish/*.zip"
        env:
          GITHUB_REPOSITORY: beardgame/td
